
* ToO Proposals
Split ToO conditions for Rapid ToO with Any conditions over expected
occurrence.

* Log Message Time
The log messages take a time parameter, which was meant to contain the amount
of time that was actually available when the time block was rejected.  Does this
make sense?  Is it useful?  Is it implemented correctly?

* Apply and Construction
The usage of "apply" vs. normal constructors is not consistent in the code.
Should probably audit all the classes and see if we can come up with a
consistent rule for when apply should be provided.   In some cases we allow
repeated arguments and don't provide a constructor that takes a simple sequence,
requiring the somewhat awkward "seq: _*" syntax.  Might want to fix that too.

* Optimization
Figure out whether/how to recover the time that was mapped to only partially
scheduled band1/2 proposals that were later dropped.  We could just pick up
the sequence where we left off and the partners that had partially scheduled
proposals would lose their turns. (This is what is currently being done.)  We
repeat the sequence with only the winning proposal to clear out partially
executed results.  We could calculate the partially scheduled proposals and
clean up the bins explicitly, recording the time we took away from the partners
with losing proposals.

Otherwise, we have to calculate all the time that was allocated to those
partially scheduled proposals along with the sequence that produced them.
Modify the BlockIterator to take this into account somehow.  :-(

One idea is to zip the time quanta with the partner sequence.  Have
the sequence elements be pairs (Partner, Time).  During Band 1 and Band 2,
the Time for each Partner would always be the same.  At Band 3, we'd
prepend a sequence of (Partner, Time) with those chunks of partially
applied proposals.  This is a refinement that is probably not necessary.